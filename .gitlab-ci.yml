# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - codestyle test
  - test cat
  - test grep
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags: 
    - s21
  script:
    - make -C src/cat
    - echo "Project cat build/:/ OK"
    - make -C src/grep
    - echo "Project grep build/:/ OK"
  artifacts:
    paths:
    - src/cat/s21_cat
    - src/grep/s21_grep
    expire_in: 30 days
  after_script:
    - bash src/telegram_bot.sh
    
clang-format:
  stage: codestyle test
  tags:
    - s21
  script:
    - |
      cd src/cat 
      if clang-format -n -Werror *.[ch]; then
          echo "Style test cat/:/ OK"
      else
          echo "Clang-format found formatting issues"
          exit 1
      fi
    - cd .. && cd grep
    - |
      if clang-format -n -Werror *.[ch]; then
          echo "Style test grep/:/ OK"
      else
          echo "Clang-format found formatting issues"
          exit 1
      fi
  after_script:
    - bash src/telegram_bot.sh    

cat:
  when: on_success
  stage: test cat
  tags:
    - s21
  script:
    - cd src/cat
    - make s21_cat
    - make test
  after_script:
    - bash src/telegram_bot.sh

grep:
  when: on_success
  stage: test grep
  tags:
    - s21
  script:
    - cd src/grep
    - make s21_grep
    - make test
  after_script:
    - bash src/telegram_bot.sh

deploy:
  when: manual
  stage: deploy
  tags:
    - s21
  script:
    - cd src
    - chmod +x deploy.sh
    - chmod 777 cat
    - chmod 777 grep
    - bash deploy.sh
  after_script:
    - bash src/telegram_bot.sh